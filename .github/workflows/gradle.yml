# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

# on:
#   push:
#     branches: [ master ]
    
#   pull_request:
#     branches: [ master ]
on:
  push:
    tags:
      - v*
  pull_request:
    tags:
      - v*

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Cache Gradle packages
      uses: actions/cache@v2
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
        restore-keys: ${{ runner.os }}-gradle
    # - name: Run Android unit tests
    #   uses: reactivecircus/android-emulator-runner@v2
    #   with:
    #     api-level: 29
    #     script: ./gradlew connectedCheck
    - name: Build with Gradle
      run: ./gradlew build
    - name: Run Android unit tests
      run: ./gradlew cAT
    - name: Run unit tests
      run: ./gradlew test
    - name: Code analysis
      run: ./gradlew lintDebug --stacktrace
    - name: Upload code analysis
      uses: actions/upload-artifact@v2
      with:
        name: Code analysis
        path: app/build/reports/lint-results-debug.html
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: app/build/outputs/apk/debug/app-debug.apk
        asset_name: app-debug.apk
        asset_content_type: application/zip